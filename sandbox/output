ProfitIsolation.java:10: error: non-static method getLogger(String) cannot be referenced from a static context
    final Logger logger = LogManager.getLogger(ProfitIsolation.class.getName());
                                    ^
ProfitIsolation.java:16: error: cannot find symbol
                Example::calculateCosts);
                ^
  symbol:   variable Example
  location: class ProfitIsolation
ProfitIsolation.java:20: error: cannot find symbol
                Example::calculateRevenue);
                ^
  symbol:   variable Example
  location: class ProfitIsolation
ProfitIsolation.java:22: error: method timed in class Timing cannot be applied to given types;
        final Double profit = Timing.timed(
                                    ^
  required: String,Supplier<A>
  found: String,logger::info,()->calcul[...]enue)
  reason: cannot infer type-variable(s) A
    (actual and formal argument lists differ in length)
  where A is a type-variable:
    A extends Object declared in method <A>timed(String,Supplier<A>)
ProfitIsolation.java:24: error: non-static variable logger cannot be referenced from a static context
                logger::info,
                ^
ProfitTest.java:28: error: method calculate in class ProfitIsolation cannot be applied to given types;
        assertEquals(18845.9, ProfitIsolation.calculate(), 0.001);
                                             ^
  required: String[]
  found: no arguments
  reason: actual and formal argument lists differ in length
6 errors
