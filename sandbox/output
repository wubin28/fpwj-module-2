LoggerFunctions.java:1: error: package com.google.common.base does not exist
import com.google.common.base.Function;
                             ^
LoggerFunctions.java:2: error: package org.apache.logging.log4j does not exist
import org.apache.logging.log4j.Logger;
                               ^
LoggerFunctions.java:6: error: cannot find symbol
  public static Function<String, Void> info(final Logger logger) {
                                                  ^
  symbol:   class Logger
  location: class LoggerFunctions
LoggerFunctions.java:6: error: cannot find symbol
  public static Function<String, Void> info(final Logger logger) {
                ^
  symbol:   class Function
  location: class LoggerFunctions
LoggerFunctions.java:7: error: cannot find symbol
    return new Function<String, Void>() {
               ^
  symbol:   class Function
  location: class LoggerFunctions
ProfitJava6.java:34: error: incompatible types: unexpected return value
    return profit;
           ^
ProfitTest.java:33: error: 'void' type not allowed here
        assertEquals(18845.9, ProfitJava6.calculate(), 0.001);
                                                   ^
Timing.java:48: error: no suitable method found for timed(String,MyFunction<String,Void>,MySupplier<A#1>)
    return timed(description, DO_NOTHING, code);
           ^
    method Timing.<A#2>timed(String,Supplier<A#2>) is not applicable
      (cannot infer type-variable(s) A#2
        (actual and formal argument lists differ in length))
    method Timing.<A#3>timed(String,Consumer<String>,Supplier<A#3>) is not applicable
      (cannot infer type-variable(s) A#3
        (argument mismatch; MyFunction<String,Void> cannot be converted to Consumer<String>))
  where A#1,A#2,A#3 are type-variables:
    A#1 extends Object declared in method <A#1>timedJava6(String,MySupplier<A#1>)
    A#2 extends Object declared in method <A#2>timed(String,Supplier<A#2>)
    A#3 extends Object declared in method <A#3>timed(String,Consumer<String>,Supplier<A#3>)
8 errors
